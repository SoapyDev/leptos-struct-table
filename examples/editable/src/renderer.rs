use crate::Book;
use leptos::prelude::*;

/// A renderer that shows an <input> tag and emits the `on_change` event when the <input> is changed.
#[component]
#[allow(unused_variables)]
pub fn InputCellRenderer(
    /// The class attribute for the cell element. Generated by the classes provider.
    class: String,
    /// The value to display.
    value: Signal<String>,
    /// Event handler called when the cell is changed.
    row: RwSignal<Book>,
    /// The index of the column. Starts at 0.
    index: usize,
) -> impl IntoView {
    let on_change = move |evt| {
        let value = event_target_value(&evt);

        let mut row = row.write();

        match index {
            1 => row.title = value,
            2 => row.author = value,
            _ => unreachable!(),
        }
    };

    view! {
        <td class=class>
            <input type="text" value=value on:change=on_change />
        </td>
    }
}
